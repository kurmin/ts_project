<?php

namespace TSProj\ProductBundle\Entity;

use Doctrine\ORM\Mapping as ORM;

/**
 * Process
 *
 * @ORM\Table(name="process")
 * @ORM\Entity(repositoryClass="TSProj\ProductBundle\Entity\ProcessRepository")
 */
class Process
{
    /**
     * @var integer
     *
     * @ORM\Column(name="id", type="integer")
     * @ORM\Id
     * @ORM\GeneratedValue(strategy="AUTO")
     */
    private $id;
    
    //test upload to git

    /**
     * @var string
     *
     * @ORM\Column(name="process_barcode", type="string", length=45)
     */
    private $processBarcode;

    /**
     * @var string
     *
     * @ORM\Column(name="process_name", type="string", length=255)
     */
    private $processName;

    /**
     * 
     * @ORM\OneToMany(targetEntity="ProductProcessTime", mappedBy="process")
     **/
    private $productProcessTime;
    
    /** 
     * @var boolean
     * 
     * @ORM\Column(name="delete_flag",type="boolean")
     */
    private $deleteFlag=0;
    
    /** 
     * @var datetime
     * 
     * @ORM\Column(name="last_maint_dt_time",type="datetime",nullable=true)
     */
    private $lastMaintDateTime;
    
    /**
     * 
     * @ORM\ManyToMany(targetEntity="Product",mappedBy="process",cascade={"PERSIST"})
     */
    private $product;
    
    /**
     * 
     * @ORM\OneToMany(targetEntity="Project", mappedBy="currentPhase")
     **/
    private $project;

    public function __toString() {
        return $this->processName;
    }

    /**
     * Constructor
     */
    public function __construct()
    {
        $this->productProcessTime = new \Doctrine\Common\Collections\ArrayCollection();
        $this->product = new \Doctrine\Common\Collections\ArrayCollection();
        $this->project = new \Doctrine\Common\Collections\ArrayCollection();
    }
  
}
