<?php

namespace TSProj\ProductBundle\Entity;

use Doctrine\ORM\Mapping as ORM;

/**
 * Product
 *
 * @ORM\Table(name="product")
 * @ORM\Entity(repositoryClass="TSProj\ProductBundle\Entity\ProductRepository")
 */
class Product
{
    /**
     * @var integer
     *
     * @ORM\Column(name="id", type="integer")
     * @ORM\Id
     * @ORM\GeneratedValue(strategy="AUTO")
     */
    private $id;

    /**
     * @var string
     *
     * @ORM\Column(name="product_barcode", type="string", length=45)
     */
    private $productBarcode;

    /**
     * @var string
     *
     * @ORM\Column(name="product_name", type="string", length=255)
     */
    private $productName;

    /**
     * @var string
     *
     * @ORM\Column(name="product_description", type="string", length=255)
     */
    private $productDescription;
    
    /**
     * @var string
     *
     * @ORM\Column(name="drawing_id", type="string", length=255)
     */
    private $drawingId;
    
    /**
     * @var \Application\Sonata\MediaBundle\Entity\Media
     *
     * @ORM\ManyToOne(targetEntity="Application\Sonata\MediaBundle\Entity\Media",cascade={"persist"},fetch="LAZY")
     */
    protected $drawingImage;
    
    /**
     * @var integer
     * 
     * @ORM\Column(name="product_time_consuming_days", type="integer",nullable=true)
     */
    private $productTimeConsumingDays=0;
    
    /**
     * @var integer
     * 
     * @ORM\Column(name="product_time_consuming_hours", type="integer",nullable=true)
     */
    private $productTimeConsumingHours=0;
    
     /**
     * @var integer
     * 
     * @ORM\Column(name="product_time_consuming_mins", type="integer",nullable=true)
     */
    private $productTimeConsumingMins=0;
    
    /**
     * @var integer
     * 
     * @ORM\Column(name="no_of_process",type="integer")
     */
    private $noOfProcess;
    
    /**
     * @var id
     * 
     * @ORM\Column(name="prev_project",type="integer",nullable=true)
     */
    private $prevProject = 0;
    
    /**
     * @ORM\ManyToOne(targetEntity="Project",inversedBy="product")
     **/
    private $project;
    
    /**
     * 
     * @ORM\ManyToMany(targetEntity="Process",inversedBy="product",cascade={"PERSIST"})
     */
    private $process;
    
    /**
     * @ORM\ManyToOne(targetEntity="WorkStatus",inversedBy="product")
     **/
    private $productStatus;
    
    /**
     * @ORM\ManyToOne(targetEntity="Stock",inversedBy="product")
     **/
    private $stock;
    
    /**
     * @ORM\OneToMany(targetEntity="ProductProcessTime", mappedBy="product")
     **/
    private $productProcessTime;
    
    /** 
     * @var boolean
     * 
     * @ORM\Column(name="delete_flag",type="boolean")
     */
    private $deleteFlag=0;
    
    /** 
     * @var datetime
     * 
     * @ORM\Column(name="last_maint_dt_time",type="datetime")
     */
    private $lastMaintDateTime;
    
    /**
     * @var float
     * 
     * @ORM\Column(name="percent_finished",type="float")
     */
    private $percentFinished;
    
    /**
     * @var string
     * 
     * @ORM\ManyToOne(targetEntity="Process",inversedBy="currentProduct")
     */
    private $currentPhase;
    
    /**
     * @var datetime
     * 
     * @ORM\Column(name="start_date_time",type="datetime",nullable=true)
     */
    private $startDateTime;
    
    /**
     * @var datetime
     * 
     * @ORM\Column(name="end_date_time",type="datetime",nullable=true)
     */
    private $endDateTime;
	
	/**
     * @var string
     * 
     * @ORM\Column(name="material",type="string",nullable=true)
     */
	 private $material;
	
     /**
     * @var integer
     * 
     * @ORM\Column(name="estimated_time_day",type="integer",nullable=true)
     */
	 private $estimatedTimeDay;
         
	 /**
     * @var integer
     * 
     * @ORM\Column(name="estimated_time_hour",type="integer",nullable=true)
     */
	 private $estimatedTimeHour;
	 
	 /**
     * @var integer
     * 
     * @ORM\Column(name="estimated_time_min",type="integer",nullable=true)
     */
	 private $estimatedTimeMin;
    
    /**
     * Constructor
     */
    public function __construct()
    {
        $this->process = new \Doctrine\Common\Collections\ArrayCollection();
        $this->productProcessTime = new \Doctrine\Common\Collections\ArrayCollection();
    }
    
    public function __toString() {
        return $this->productName;
    }

    /**
     * Get id
     *
     * @return integer 
     */
    public function getId()
    {
        return $this->id;
    }

    /**
     * Set productBarcode
     *
     * @param string $productBarcode
     * @return Product
     */
    public function setProductBarcode($productBarcode)
    {
        $this->productBarcode = $productBarcode;

        return $this;
    }

    /**
     * Get productBarcode
     *
     * @return string 
     */
    public function getProductBarcode()
    {
        return $this->productBarcode;
    }

    /**
     * Set productName
     *
     * @param string $productName
     * @return Product
     */
    public function setProductName($productName)
    {
        $this->productName = $productName;

        return $this;
    }

    /**
     * Get productName
     *
     * @return string 
     */
    public function getProductName()
    {
        return $this->productName;
    }

    /**
     * Set productDescription
     *
     * @param string $productDescription
     * @return Product
     */
    public function setProductDescription($productDescription)
    {
        $this->productDescription = $productDescription;

        return $this;
    }

    /**
     * Get productDescription
     *
     * @return string 
     */
    public function getProductDescription()
    {
        return $this->productDescription;
    }

    /**
     * Set drawingId
     *
     * @param string $drawingId
     * @return Product
     */
    public function setDrawingId($drawingId)
    {
        $this->drawingId = $drawingId;

        return $this;
    }

    /**
     * Get drawingId
     *
     * @return string 
     */
    public function getDrawingId()
    {
        return $this->drawingId;
    }

    /**
     * Set deleteFlag
     *
     * @param boolean $deleteFlag
     * @return Product
     */
    public function setDeleteFlag($deleteFlag)
    {
        $this->deleteFlag = $deleteFlag;

        return $this;
    }

    /**
     * Get deleteFlag
     *
     * @return boolean 
     */
    public function getDeleteFlag()
    {
        return $this->deleteFlag;
    }

    /**
     * Set lastMaintDateTime
     *
     * @param \DateTime $lastMaintDateTime
     * @return Product
     */
    public function setLastMaintDateTime($lastMaintDateTime)
    {
        $dateTime = new \DateTime();
        if($lastMaintDateTime){
            $this->lastMaintDateTime = $lastMaintDateTime;
        }else{
            $this->lastMaintDateTime = $dateTime;
        }

        return $this;
    }

    /**
     * Get lastMaintDateTime
     *
     * @return \DateTime 
     */
    public function getLastMaintDateTime()
    {
        return $this->lastMaintDateTime;
    }

    /**
     * Set project
     *
     * @param \TSProj\ProductBundle\Entity\Project $project
     * @return Product
     */
    public function setProject(\TSProj\ProductBundle\Entity\Project $project = null)
    {
        $this->project = $project;

        return $this;
    }

    /**
     * Get project
     *
     * @return \TSProj\ProductBundle\Entity\Project 
     */
    public function getProject()
    {
        return $this->project;
    }

    /**
     * Add process
     *
     * @param \TSProj\ProductBundle\Entity\Process $process
     * @return Product
     */
    public function addProcess(\TSProj\ProductBundle\Entity\Process $process)
    {
        $this->process[] = $process;
        $process->setProduct($this);
        return $this;
    }

    /**
     * Remove process
     *
     * @param \TSProj\ProductBundle\Entity\Process $process
     */
    public function removeProcess(\TSProj\ProductBundle\Entity\Process $process)
    {
        $this->process->removeElement($process);
    }

    /**
     * Get process
     *
     * @return \Doctrine\Common\Collections\Collection 
     */
    public function getProcess()
    {
        return $this->process;
    }

    /**
     * Set productStatus
     *
     * @param \TSProj\ProductBundle\Entity\WorkStatus $productStatus
     * @return Product
     */
    public function setProductStatus(\TSProj\ProductBundle\Entity\WorkStatus $productStatus = null)
    {
        $this->productStatus = $productStatus;

        return $this;
    }

    /**
     * Get productStatus
     *
     * @return \TSProj\ProductBundle\Entity\WorkStatus 
     */
    public function getProductStatus()
    {
        return $this->productStatus;
    }

    /**
     * Set stock
     *
     * @param \TSProj\ProductBundle\Entity\Stock $stock
     * @return Product
     */
    public function setStock(\TSProj\ProductBundle\Entity\Stock $stock = null)
    {
        $this->stock = $stock;

        return $this;
    }

    /**
     * Get stock
     *
     * @return \TSProj\ProductBundle\Entity\Stock 
     */
    public function getStock()
    {
        return $this->stock;
    }

    /**
     * Add productProcessTime
     *
     * @param \TSProj\ProductBundle\Entity\ProductProcessTime $productProcessTime
     * @return Product
     */
    public function addProductProcessTime(\TSProj\ProductBundle\Entity\ProductProcessTime $productProcessTime)
    {
        $this->productProcessTime[] = $productProcessTime;
        $productProcessTime->setProduct($this);
        return $this;
    }

    /**
     * Remove productProcessTime
     *
     * @param \TSProj\ProductBundle\Entity\ProductProcessTime $productProcessTime
     */
    public function removeProductProcessTime(\TSProj\ProductBundle\Entity\ProductProcessTime $productProcessTime)
    {
        $this->productProcessTime->removeElement($productProcessTime);
    }

    /**
     * Get productProcessTime
     *
     * @return \Doctrine\Common\Collections\Collection 
     */
    public function getProductProcessTime()
    {
        return $this->productProcessTime;
    }

    /**
     * Set percentFinished
     *
     * @param float $percentFinished
     * @return Product
     */
    public function setPercentFinished($percentFinished)
    {
        $this->percentFinished = $percentFinished;

        return $this;
    }

    /**
     * Get percentFinished
     *
     * @return float 
     */
    public function getPercentFinished()
    {
        return $this->percentFinished;
    }

    /**
     * Set prevProject
     *
     * @param integer $prevProject
     * @return Product
     */
    public function setPrevProject($prevProject)
    {
        $this->prevProject = $prevProject;

        return $this;
    }

    /**
     * Get prevProject
     *
     * @return integer 
     */
    public function getPrevProject()
    {
        return $this->prevProject;
    }

    /**
     * Set drawingImage
     *
     * @param \Application\Sonata\MediaBundle\Entity\Media $drawingImage
     * @return Product
     */
    public function setDrawingImage(\Application\Sonata\MediaBundle\Entity\Media $drawingImage = null)
    {
        $this->drawingImage = $drawingImage;

        return $this;
    }

    /**
     * Get drawingImage
     *
     * @return \Application\Sonata\MediaBundle\Entity\Media 
     */
    public function getDrawingImage()
    {
        return $this->drawingImage;
    }

    /**
     * Set currentPhase
     *
     * @param \TSProj\ProductBundle\Entity\Process $currentPhase
     * @return Product
     */
    public function setCurrentPhase(\TSProj\ProductBundle\Entity\Process $currentPhase = null)
    {
        $this->currentPhase = $currentPhase;

        return $this;
    }

    /**
     * Get currentPhase
     *
     * @return \TSProj\ProductBundle\Entity\Process 
     */
    public function getCurrentPhase()
    {
        return $this->currentPhase;
    }

    /**
     * Set startDateTime
     *
     * @param \DateTime $startDateTime
     * @return Product
     */
    public function setStartDateTime($startDateTime)
    {
        $this->startDateTime = $startDateTime;

        return $this;
    }

    /**
     * Get startDateTime
     *
     * @return \DateTime 
     */
    public function getStartDateTime()
    {
        return $this->startDateTime;
    }

    /**
     * Set endDateTime
     *
     * @param \DateTime $endDateTime
     * @return Product
     */
    public function setEndDateTime($endDateTime)
    {
        $this->endDateTime = $endDateTime;

        return $this;
    }

    /**
     * Get endDateTime
     *
     * @return \DateTime 
     */
    public function getEndDateTime()
    {
        return $this->endDateTime;
    }

    /**
     * Set material
     *
     * @param string $material
     * @return Product
     */
    public function setMaterial($material)
    {
        $this->material = $material;

        return $this;
    }

    /**
     * Get material
     *
     * @return string 
     */
    public function getMaterial()
    {
        return $this->material;
    }

    /**
     * Set estimatedTimeHour
     *
     * @param integer $estimatedTimeHour
     * @return Product
     */
    public function setEstimatedTimeHour($estimatedTimeHour)
    {
        $this->estimatedTimeHour = $estimatedTimeHour;

        return $this;
    }

    /**
     * Get estimatedTimeHour
     *
     * @return integer 
     */
    public function getEstimatedTimeHour()
    {
        return $this->estimatedTimeHour;
    }

    /**
     * Set estimatedTimeMin
     *
     * @param integer $estimatedTimeMin
     * @return Product
     */
    public function setEstimatedTimeMin($estimatedTimeMin)
    {
        $this->estimatedTimeMin = $estimatedTimeMin;

        return $this;
    }

    /**
     * Get estimatedTimeMin
     *
     * @return integer 
     */
    public function getEstimatedTimeMin()
    {
        return $this->estimatedTimeMin;
    }

    /**
     * Set productTimeConsumingDays
     *
     * @param integer $productTimeConsumingDays
     * @return Product
     */
    public function setProductTimeConsumingDays($productTimeConsumingDays)
    {
        $this->productTimeConsumingDays = $productTimeConsumingDays;

        return $this;
    }

    /**
     * Get productTimeConsumingDays
     *
     * @return integer 
     */
    public function getProductTimeConsumingDays()
    {
        return $this->productTimeConsumingDays;
    }

    /**
     * Set noOfProcess
     *
     * @param integer $noOfProcess
     * @return Product
     */
    public function setNoOfProcess($noOfProcess)
    {
        $this->noOfProcess = $noOfProcess;

        return $this;
    }

    /**
     * Get noOfProcess
     *
     * @return integer 
     */
    public function getNoOfProcess()
    {
        return $this->noOfProcess;
    }

    /**
     * Set productTimeConsumingHours
     *
     * @param integer $productTimeConsumingHours
     * @return Product
     */
    public function setProductTimeConsumingHours($productTimeConsumingHours)
    {
        $this->productTimeConsumingHours = $productTimeConsumingHours;

        return $this;
    }

    /**
     * Get productTimeConsumingHours
     *
     * @return integer 
     */
    public function getProductTimeConsumingHours()
    {
        return $this->productTimeConsumingHours;
    }

    /**
     * Set productTimeConsumingMins
     *
     * @param integer $productTimeConsumingMins
     * @return Product
     */
    public function setProductTimeConsumingMins($productTimeConsumingMins)
    {
        $this->productTimeConsumingMins = $productTimeConsumingMins;

        return $this;
    }

    /**
     * Get productTimeConsumingMins
     *
     * @return integer 
     */
    public function getProductTimeConsumingMins()
    {
        return $this->productTimeConsumingMins;
    }
}
